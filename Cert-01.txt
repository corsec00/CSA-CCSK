#CCSK Simulator

01 - A cloud deployment of two or more unique clouds is known as:
*** A Hybrid Cloud

04 - What are the primary security responsibilities of the cloud provider in the management infrastructure?
*** Building and properly configuring a secure network infrastructure

05 - If there are gaps in network logging data, what can you do?
*** You can instrument the technology stack with your own logging.

07 - Who is responsible for the security of the physical infrastructure and virtualization platform?
*** The cloud provider

08 - What factors should you understand about the data specifically due to legal, regulatory, and jurisdictional factors?
*** The physical location of the data and how it is accessed

09 - Which cloud-based service model enables companies to provide client-based access for partners to databases or applications?
*** Software-as-a-service (SaaS)

10 - what are the main considerations for key management
*** Performance, accessibility, latency, and security 

11 - six phases of data security lifecycle
*** Creation , Storing , activity ,made accessible, long-term storage , destroyed 
*** Create, Store, Use, Share, Archive, Destroy

15 - what is the most important resason for know where the cloud service provider will host the data?
*** To allow compliance with local laws regarding data privacy and safeguarding

18 - when deploying security as a service in a highly regulated industry or enviorenment, what should both parties agree on in advance and include in the sla?
*** The metrics defining the service level required to achieve regulatory objectives.

19 - In volume storage, what methods is often used to support resilience and security?
*** data dispersion

20 - What is it called when a customer's information and/or processes are compromised by the actions of another customer in a multi-tenancy environment?
*** isolation failure
** Information leakage

21 - For cloud consumers to be able to properly configure and manage their network security, what must cloud providers do?
D. provide api access (?)
*** explose securiyt controls

22 - What is resource pooling?
*** The provider's computing resources are pooled to serve multiple consumer

25 - Which governance domain focuses on proper and adequate incident detection, response, notification, and remediation?
*** incident response, notification and remediation

27 - What type of information is contained in the Cloud Security Alliance's Cloud Control Matrix?
*** a number of requirements to be implemented based upon numerous standards and regulatory requirements

28 - which SDP component terminates network traffic and enforces communication policies?
*** Gateway

29 - When considering business continuity and disaster recovery with a cloud provider, which layer of the logical stack includes code and message queues?
*** Applistructure (SecGuiV4, P.74)

30 - which type of application security testing tests running applications and includes tests such as web vulnerability testing and fuzzing?
*** Dynamic Application Security Testing (DAST)

32 - which proeminent recommended standard to enable federation of identity in cloud enviorenment include:
*** SAML

33 - How should an SDLC be modified to address application security in a Cloud Computing environment?
** integrate development enviorenments
*** Updated threat and trust models

34 - What is a potential concern of using security-as-a-service(Secaas)?
*** Lack of visibility

35 - which security advantage considers that anything that goes into production is created by the ci/cd pipeline on approved code and configuration templates?
*** Standarization

36 - Isolation failure refers to:
*** Failure of mechanisms separating storage, memory, routing between diferent tenants

38 - What is a challenge of application security in a cloud enviorenment?
*** Limited detailed visibility

40 - The Software Defined Perimeter (SDP) includes which components?
** Controller, Initiating Hosts, and Accepting Hosts
*** Client, Controller (for Auth and Autho), Gateway

41 - In a cloud environment, how can you best determine data/information security risks and potential controls?
** understand the cloud storage architecture in use

43 - which component is a key part of software container systems? (the execution enviorenment, An orchestration and scheduling controller, repository for the container images or code to execute)
*** the execution enviorenment

46 - what makes the metastructure layer of cloud computing so different from traditional computing?
*** It includes the management plane components which are network enabled and remotly accessible

47 - the scope applicability column in the CCM indicates the applicability of the cloud security control to which of the following elements?
*** mappings to well know standards and frameworkss

48 - which computing model contains the protocols and mechanisms providing the interface between the infrastructure and other layers?
*** metastructure layer

49 - a defining set of rules composed of claims and attributes os the entities in a transaction, which is used to determine their level of access to cloud based resource is called what?
*** Entilement Matrix

50 - What is true of Software Defined Network firewalls?
*** They are not limited based on physical topology

51 - Which cloud storage technology would include a content delivery network (CDN), files stored in SaaS, and caching?
***Application

54 - which concept provides the abstraction needed for resource pools?
*** Virtualization

55 - which common component of big data is focused on the mechanism used to ingest large volumes of data, oftem of a streaming nature
*** Distributed data collection

14 - CCSK: what is more secure and cost effective approach to data security and encryption
*** C. apply a risk based approach

37 - What is the audit related implications of the outsourced cloud services?
** Organizations need to be prepared to share the burden of blame with their outsourced partners

39 - When attempting to contain, erradicate, and recover from a cloud based incident, what is the first step you should do?
***Put the device in stand by mode
** Terminate all super user/administrative access

### NEW PACK 

In the cloud provider and consumer relationship, which entity manages the virtual or abstracted infrastructure?
** Only the cloud consumer

Who is responsible for the proper rights management and configuration of exposed controls in the management plane?
** The cloud consumer

Cloud provider contract enforceability should be carefully considered in light of
** Foreign and out of state jurisdictions

Which security concept includes the policy, process, and internal controls comprising how an organization is run – including the structures and policies of the leadership and other mechanisms for management?
** Governance

In which layer is the management plane?
** Metastructure layer

Why, in the event that an enterprise seeks a new provider for Security as a Service, must they concern themselves with the problems of translating and transporting existing data and log files in a forensically sound manner?
** Providers often have proprietary standards for logging and reporting

Which phase of the incident response lifecycle includes creating and validating alerts?
** Detection & Analysis

Which technique uses the management plane to detect various activities, such as file uploads or configuration changes?
** Event-driven security

If a provider’s infrastructure is not in scope, who is responsible for building compliant applications and services?
** The customer is responsible for compliant applications and services

Which of the following is NOT a method of object storage encryption?
** Enterprise digital rights management

In which deployment model do cloud customers have a reduced ability to govern operations because the cloud provider is responsible for the management and governance of the infrastructure?
*** Public Cloud

What is the main data source for detection and analysis of an incident?
** Logs

What are the components of an encryption system?
** Data, encryption engine, and key management

What makes single cloud assets less resilient compared with a traditional infrastructure?
** Greater fragility of virtualized resources

Which components typically comprise Infrastructure-as-a-Service (IaaS) providers?
*** Hardware, APIs, and Core Connectivity & Delivery


Which action is part of the containment phase of the incident response lifecycle?
** Making considerations for data loss versus service availability

What is true of how the management plane is to be secured in the cloud?
** The cloud provider is responsible for securing the management plane and exposing the required security features, while the cloud consumer is responsible for configuring access to the management plane

Which of the following statements best describes the potential advantages of security as a service?
** The advantages may include flexible offering of services, greater security domain knowledge and efficiency of SecaaS providers

Which of the following statements best defines the "authentication" component of identity, entitlement, and access management (IdEA).
** Establishing/asserting the identity to the application

What can be implemented to help with account granularity and limit blast radius with IaaS an PaaS?
*** Establishing multiple accounts

Which statement best describes the options for PaaS encryption?
** PaaS is very diverse and may include client/application, database, and proxy encryption as well as other options

Which tool is the primary tool between the cloud provider and consumer that extends governance into business partners and providers?
*** Contracts (Guide, pg 29, 2.1.1.1)

Which of the following cloud deployment models represents a composition of two or more clouds that remain unique identities but are bound together by standardized or proprietary technology that enables data and application portability?
** Hybrid Cloud (1.1.2.3)

Which statement best describes a data (information) dispersion fragmentation scheme?
*** A file is split into fragments; all of the fragments are sent to multiple physical storage repositories.

Which common component of big data is focused on the mechanisms used to ingest large volumes of data, often of a streaming nature?
*** Distributed data collection 

When configuring SDN firewalls, after adding all assets, what is typically the first configuration you must address?
** Opening connections

At a minimum, how often should incident response testing occur?
** Annually and whenever a significant change occurs

In the case of Infrastructure as a Service (IaaS) or Platform as a Service (PaaS) the responsibility to effectively manage the security of the application running in the cloud primarily belongs to who?
** The cloud consumer's administrators

What are the encryption options available for SaaS consumers?
** Provider-managed and (sometimes) proxy encryption

You have a business relationship with a cloud provider for all sales management functionality. Through the APIs and SDKs, you have customized the interface and some functionality, but the back end service is done through the cloud provider. In this relationship, which service is completed by the cloud provider?
** Platform-as-a-service (PaaS)

What is a benefit of application security in a cloud environment?
Isolated environments

A key element of the "Destroy" phase of the Data Security Lifecycle is:
** Crypto-Shredding

To what extent does the CSA Guidance document suffice for legal advice in setting up relationships with cloud service providers?
** The CSA Guidance document provides an overview of selected issues and it is not a substitute for obtaining legal advice. (Guide pg 37)

What are the three valid options for protecting data as it moves to and within the cloud?
***Client/Application Encryption, Link/Network Encryption, Proxy-Based Encryption (11.1.3.1.)

How can you reduce the blast radius if an attacker compromises one system?
** Configure applications on distinct virtual networks only connecting where needed

What are major factors to building and managing a secure management plane?
** Perimeter security; customer authentication; internal authentication and credential passing; authorization and entitlements; and logging, monitoring, and alerting

Which of the following items is one of the major regulatory compliance problems associated with cloud environments?
** The distributed nature of cloud storage may result in regulated information being sent across geographical boundaries

Which SDP component is used for authentication and authorization?
** Controller (SecGui Pg.82 )

What are the three main aspects for data security controls?
*** Controlling, protecting, and enforcing (11.1.1 Data Security Controls)

Which facet is focused on protecting the management plane components, such as web and API servers, from attacks?
** Perimeter security

Which type of application security testing should incorporate checks on API calls to the cloud service?
*** Static Application Security Testing (SAST)

When associating the functions to an actor, what is used to restrict a list of possible actions dowr to allowed actions?
** Controls

Why do blind spots occur in a virtualized environment, where network-based security controls may not be able to monitor certain types of traffic?
** Virtual machines may communicate with each other over a virtual network all on the same host rather than a physical network between servers
** None of the above

The level of attention and scrutiny paid to enterprise risk assessments should be directly related to what?
** The value of the information at risk

What is a core tenant of risk management?
*** You can manage, transfer, accept, or avoid risks.

Which deployment model is commonly used to describe a non-cloud data center bridged directly to a cloud provider?
*** Hybrid Cloud

For cloud consumers to be able to properly configure and manage their network security, what must cloud providers do?
*** Expose security controls

What is a method used to decouple the network control plane from the data plane?
*** Software Defined Networking (SDN)

Which concept is defined as the unique expression of an entity within a given namespace?
** Identity

How can you monitor and filter data in a virtual network when traffic might not cross the physical network? (Both)
•	Route traffic to a virtual appliance on the same virtual network
•	Route traffic to a virtual network monitoring or filtering tool on the same hardware

What best describes the tradeoff of Infrastructure as a Service as compared to other cloud service models?
** Greater initial costs and greater security features

Which part of the incident response process is greatly complicated by the resource pooling and rapid elasticity of cloud infrastructure?
** Forensics

What are the NIST defined essential characteristics of cloud computing?
** Broad network access, rapid elasticity, measured service, on-demand self-service, and resource pooling

What is true of cloud built-in firewalls?
*** They typically offer fewer features that newer physical firewalls (SecGuiV4, P.96)

What factor(s), if any, allows for more efficient and effective containment and recovery in a cloud environment than in a non-cloud environment.
** Virtualization technologies, and the elasticity inherent in cloud computing platforms

Which regulation affects data controllers with business in Japan?
** Act on the Protection of Personal Information

The key concern of data backup and recovery schemes is:
** Data should not be commingled with other customers

If there are gaps in network logging data, what can you do?
**You can instrument the technology stack with your own logging.

Who is responsible for the security of the physical infrastructure and virtualization platform?
** The cloud provider

What factors should you understand about the data specifically due to legal, regulatory, and jurisdictional factors?
** The physical location of the data and how it is accessed

Which attack surfaces, if any, does virtualization technology introduce?
** All of the above

What is defined as the process by which an opposing party may obtain private documents for use in litigation?
*** Discovery

What item below allows disparate directory services and independent security domains to be interconnected?
*** Federation

To understand their compliance alignments and gaps with a cloud provider, what must cloud customers rely on?
*** Third-party attestations

Which of the following is a perceived advantage or disadvantage of managing enterprise risk for cloud deployments?
*** Greater reliance on contracts, audits, and assessments due to lack of visibility or management.

Which data security control is the LEAST likely to be assigned to an IaaS provider?
*** Application logic

How does virtualized storage help avoid data loss if a drive fails?
*** Multiple copies in different locations

What is the newer application development methodology and philosophy focused on automation of application development and deployment?
*** DevOps

What is true of searching data across cloud environments?
*** You might not have the ability or administrative rights to search or access all hosted data.

How does running applications on distinct virtual networks and only connecting networks as needed help?
*** It reduces the blast radius of a compromised system

How can virtual machine communications bypass network security controls?
*** VM communications may use a virtual network on the same hardware host

Which concept is a mapping of an identity, including roles, personas, and attributes, to an authorization?
*** Entitlement

Select the best definition of `compliance` from the options below.
** The awareness and adherence to obligations, including the assessment and prioritization of corrective actions deemed necessary and appropriate.

Which of the following is NOT a cloud computing characteristic that impacts incidence response?
*** Object-based storage in a private cloud.

A defining set of rules composed of claims and attributes of the entities in a transaction, which is used to determine their level of access to cloud-based resources is called what?
*** An entitlement matrix 

Which layer is the most important for securing because it is considered to be the foundation for secure cloud operations?
*** Infrastructure

Why is a service type of network typically isolated on different hardware?
*** It has distinct functions from other networks

Which governance domain deals with evaluating how cloud computing affects compliance with internal security policies and various legal requirements, such as regulatory and legislative?
*** Compliance and Audit Management1

An important consideration when performing a remote vulnerability test of a cloud-based application is to
*** Obtain provider permission for test 

Cloud services exhibit five essential characteristics that demonstrate their relation to, and differences from, traditional computing approaches. Which one of the five characteristics is described as: a consumer can unilaterally provision computing capabilities such as server time and network storage as needed?
*** On-demand self-service

Which of the following statements are NOT requirements of governance and enterprise risk management in a cloud environment?
*** Negotiate long-term contracts with companies who use well-vetted software application to avoid the transient nature of the cloud environment.

In volume storage, what method is often used to support resiliency and security?
*** data dispersionQuestion

What is true of security as it relates to cloud network infrastructure?
*** You should implement a default deny with cloud firewalls.
Which statement best describes the impact of Cloud Computing on business continuity management?
*** Clients need to do business continuity planning due diligence in case they suddenly need to switch providers. 

What is known as a code execution environment running within an operating system that shares and uses the resources of the operating system?
*** ContainerQuestion 

Which term is used to describe the use of tools to selectively degrade portions of the cloud to continuously test business continuity?
*** Chaos Engineering

What is true of companies considering a cloud computing business relationship?
*** The companies using the cloud providers are the custodians of the data entrusted to them.

When deploying Security as a Service in a highly regulated industry or environment, what should both parties agree on in advance and include in the SLA?
*** The metrics defining the service level required to achieve regulatory objectives.

Which cloud storage technology is basically a virtual hard drive for instanced or VMs?
*** Volume storage

Which of the following items is NOT an example of Security as a Service (SecaaS)?
*** Provisioning 

How is encryption managed on multi-tenant storage?
*** The answer could be A, B, or C depending on the provider 

Which statement best describes why it is important to know how data is being accessed?
*** The devices used to access data use a variety of applications or clients and may have different security characteristics.

What is resource pooling?
*** The provider's computing resources are pooled to serve multiple consumers.

Which of the following is NOT normally a method for detecting and preventing data migration into the cloud?
*** Intrusion Prevention System

In which type of environment is it impractical to allow the customer to conduct their own audit, making it important that the data center operators are required to provide auditing for the customers?
*** Multi-tenant environments

What is the best way to ensure that all data has been removed from a public cloud environment including all media such as back-up tapes?
*** Maintaining customer managed key management and revoking or deleting keys from the key management system to prevent the data from being accessed again.
*** Keep the keys stored on the client side so that they are secure and so that the users have the ability to delete their own data.

Which communication methods within a cloud environment must be exposed for partners or consumers to access database information using a web application?
*** Application Programming Interface (API)

Which governance domain focuses on proper and adequate incident detection, response, notification, and remediation?
*** Incident Response, Notification and Remediation

Which opportunity helps reduce common application security issues?
*** Segregation by default

What is the most significant security difference between traditional infrastructure and cloud computing?
*** Management plane

When investigating an incident in an Infrastructure as a Service (IaaS) environment, what can the user investigate on their own?
*** Their own virtual instances in the cloud

If in certain litigations and investigations, the actual cloud application or environment itself is relevant to resolving the dispute in the litigation or investigation, how is the information likely to be obtained?
*** It may require a subpoena of the provider directly 

What are the primary security responsibilities of the cloud provider in compute virtualizations?
*** Enforce isolation and maintain a secure virtualization infrastructure
	
What should every cloud customer set up with its cloud service provider (CSP) that can be utilized in the event of an incident?
*** A communication plan

Audits should be robustly designed to reflect best practice, appropriate resources, and tested protocols and standards. They should also use what type of auditors?
*** Independent auditorsQuestion 

Which of the following statements is true in regards to Data Loss Prevention (DLP)?
*** DLP can provide options for how data found in violation of a policy can be handled. 

For third-party audits or attestations, what is critical for providers to publish and customers to evaluate?
*** Scope of the assessment and the exact included features and services for the assessment

When mapping functions to lifecycle phases, which functions are required to successfully process data?
*** Create and Use

Which of the following is one of the five essential characteristics of cloud computing as defined by NIST?
*** Measured serviceQuestion 

What type of information is contained in the Cloud Security Alliance's Cloud Control Matrix?
*** A number of requirements to be implemented, based upon numerous standards and regulatory requirementsQuestion 

How can key management be leveraged to prevent cloud providers from inappropriately accessing customer data?
*** Segregate keys from the provider hosting dataQuestion

Which statement best describes the Data Security Lifecycle?
*** The Data Security Lifecycle has six stages, can be non-linear, and varies in that some data may never pass through all stages.

Which of the following encryption methods would be utilized when object storage is used as the back-end for an application?
*** Client/application encryption

In the Software-as-a-service relationship, who is responsible for the majority of the security?
*** Cloud ProviderQuestion 

What method can be utilized along with data fragmentation to enhance security?
*** Encryption

Which of the following statements best defines the "authorization" as a component of identity, entitlement, and access management?
*** Enforcing the rules by which access is granted to the resources
How can web security as a service be deployed for a cloud consumer?
*** Both A and C

What of the following is NOT an essential characteristic of cloud computing?
*** Third Party Service

Which type of application security testing tests running applications and includes tests such as web vulnerability testing and fuzzing?
*** Dynamic Application Security Testing (DAST)

In which deployment model should the governance strategy consider the minimum common set of controls comprised of the Cloud Service Provider contract and the organization's internal governance agreements?
*** Hybrid

What is known as the interface used to connect with the metastructure and configure the cloud environment?
*** Management plane

What does it mean if the system or environment is built automatically from a template?
*** Changes made in production are overwritten by the next code or template change.

Which type of application security testing involves manual activity that is not necessarily integrated into automated testing?
*** Code ReviewQuestion 

Which meta-phase does the Cloud Security Alliance use to focus on the security and testing activities when moving code from an isolated development environment to production?
*** Secure DeploymentQuestion

Highly regulated industries such as finance and health care should consider the impact of cloud providers operating in diverse geographic locations and ______________.
*** Legal jurisdictions

The key concern of data location is:
*** Data is stored only in geographic locations permitted by regulations

Which architecture for hybrid cloud connectivity allows you to connect multiple, different cloud networks to a data center using a single hybrid connection?
*** Bastion

What are the barriers to developing full confidence in security as a service (SecaaS)?
*** Compliance, multi-tenancy, and vendor lock-in

Of the choices below which option allows for the most interoperability in security authentication in a cloud environment?
*** SAML

Which of the following is NOT a common storage option with Infrastructure as a Service?
*** Big Data as a Service

Select the statement below which best describes the relationship between identities and attributes
*** An identity is a distinct and unique object within a particular namespace. Attributes are properties which belong to an identity. Each identity can have multiple attributes.

Which cloud security model type provides generalized templates for helping implement cloud security?
*** Reference architecturesQuestion 

What is true of a workload?
*** It is a unit of processing that consumes memoryQuestion 

What are the primary security responsibilities of the cloud provider in the management infrastructure?
*** Building and properly configuring a secure network infrastructureQuestion 

What is a potential concern of using Security-as-a-Service (SecaaS)?
*** Lack of visibility

How should an SDLC be modified to address application security in a Cloud Computing environment?
*** Updated threat and trust models


### CCM 

CCM: What is the role of the Scope Applicability column in the CCM?
** It maps the existing industry standards to the controls in the domains

06 - CCM: In the CCM tool, a ____________ is a measure that modifies risk and includes any process, policy, device, practice or any other actions which modify risk.
*** Control Specification

CCM: In the Identity & Access Management (IAM) domain, what does the number ‘04’ in IAM-04 signify?
*** It is the 4th control in the IAM domain

CCM: What security requirements does the Identity and Access Management domain in the CCM address?
** The requirement to ensure appropriate access to resources and to enable the right individuals to access the right resources at the right times for the right reasons.

CCM: A hypothetical company called "lnfrastructure4Sure" provides Infrastructure as a Service (IaaS) to its clients. A customer wants to review Infrastructure4Sure's hypervisor security implementation measures. Which of the following measures should Infrastructure4Sure implement?
** Choose a hypervisor with a smaller footprint for a reduced attack surface.

CCM: A hypothetical company called "Security4Sure" provides a cloud based service to share confidential documents. The confidential documents are stored in their servers and are encrypted. How will Security4Sure ensure the protection of client data within their data center?
** Encrypt the data at rest and put in place appropriate measures for management of encryption keys

CCM: A hypothetical start-up company called "IT4Sure" provides a cloud based IT management solution. They are growing rapidly and have some security measures in place but the employees are still using their personal mobile devices for storing and communicating company confidential information. So they decide to provide the employees with company mobile devices and implement a Mobile Device Management policy. Two months later, a customer wants to review IT4Sure's mobile device security practices. Which of the following basic protection measures should the client look for in the company's Mobile Device Management policy?
** All of the above

CCM: The following list of controls belong to which domain of the CCM? GRM 06 " Policy GRM 07" Policy Enforcement GRM 08 " Policy Impact on Risk Assessments GRM 09 " Policy Reviews GRM 10" Risk Assessments GRM 11 " Risk Management Framework
** Governance and Risk Management

CCM: A hypothetical company called: `Health4Sure` is located in the United States and provides cloud based services for tracking patient health. The company is compliant with HIPAA/HITECH Act among other industry standards. Health4Sure decides to assess the overall security of their cloud service against the CCM toolkit so that they will be able to present this document to potential clients. Which of the following approach would be most suitable to assess the overall security posture of Health4Sure's cloud service?
** The CCM domains are not mapped to HIPAA/HITECH Act. Therefore Health4Sure should assess the security posture of their cloud service against each and every control in the CCM. This approach will allow a thorough assessment of the security posture.

CCM: In the CCM tool, `Encryption and Key Management` is an example of which of the following?
** Domain (for CMM < 4)

CCM: Which of the following statement about CSA's CCM and Security Guidance is False?
** CSA's CCM tells you WHAT to do, the Guidance tells you HOW to do it

CCM: The Cloud Service Delivery Model Applicability column in the CCM indicates the applicability of the cloud security control to which of the following elements?
** SaaS, PaaS or IaaS

CCM: A hypothetical start-up company called "ABC" provides a cloud based IT management solution. They are growing rapidly and therefore need to put controls in place in order to manage any changes in their production environment. Which of the following Change Control & Configuration Management production environment specific control should they implement in this scenario?
*** Policies and procedures shall be established for managing the risks associated with applying changes to business-critical or customer (tenant)-impacting (physical and virtual) applications and system-system interface (API) designs and configurations, infrastructure network and systems components.

CCM: A company wants to use the IaaS offering of some CSP. Which of the following options for using CCM is NOT suitable for the company as a cloud customer?
*** Submit the CCM on behalf of the CSP to CSA Security, Trust & Assurance Registry (STAR), a free, publicly accessible registry that documents the security controls provided by CSPs

CCM: The Architectural Relevance column in the CCM indicates the applicability of the cloud security control to which of the following elements?
*** Physical, Network, Compute, Storage, Application or Data


### ENISA
02 - ENISA: Which is not one of the five key legal issues common across all scenarios:
*** Globalization

03 - ENISA: An example high risk role for malicious insiders within a Cloud Provider includes
*** Auditors

44 - ENISA: an underlying vulnerability related to Loss of Governance is:
** C. Unclear asset owership

12 - ENISA: Which of the following is among the vulnerabilities contributing to a high risk ranking for Network Management?
*** System or O/S vulnerabilities

ENISA: To mitigate credential compromise or theft, cloud provider can implement:
** Anomaly detection capabilities

ENISA: As it relates to public cloud computing, in the European Data Protection law, the customer is considered to be the
** Data controller

ENISA: In Infrastructure as a Service (IaaS), who is responsible for guest systems monitoring?
** Customer

ENISA: Because it is practically impossible to process data in encrypted form, customers should have the following expectation of cloud providers:
*** Provider should always manage customer encryption keys with hardware security module (HSM) storage

ENISA: A key area of controls for cloud provider network architecture is
** Distributed Denial of Service mitigation

ENISA: Which is a potential security benefit of cloud computing?
*** More efficient and timely system updates

ENISA: Licensing Risks refer to:
*** A traditional software licensing scheme may lead to high costs or lack of compliance in cloud systems

ENISA: `VM hopping` is:
*** Using a compromised VM to exploit a hypervisor, used to take control of other VMs.

ENISA: Lock-in is ranked as a high risk in ENISA research, a key underlying vulnerability causing lock in is:
*** Lack of completeness and transparency in terms of use

ENISA: A reason for risk concerns of a cloud provider being acquired is:
*** Non-binding agreements put at risk


### True or False

16 - APIs and web services require extensive hardening and must assume attacks from authenticated and unauthenticated adversaries
*** True

26 - Cloud applications can use virtual networks and other structures, for hyper-segregated environments
*** True

42 - Sending data to a providers storage over an API is likely as much more reliable and secure than setting up your own SFTP server on a VM in the same provider
*** True (pg 122)

45 - without virtualization, there's no cloud
*** True

52 - Virtual appliances can become bottlenecks because they cannot fail open and must intercept all traffic
*** True

53 - To increase network isolation; you should use SDN capabilities for multiple networks and cloud accounts or segments
*** True

56 - Use elastic servers when possible and move workloads to new instances.
*** True

13 - computer virtualization abstracts the running of code, not including the operation system, from the underlying hardware
*** False (include OS)

24 - Your SLA with your cloud provider ensures continuity for all services.
*** False

The hub and spoke architecture uses internal identity providers or sources connected directly to cloud providers.
*** False (Guide, 12.1.2, pg 136)

Cloud storage will most often utilize the same types of data storage used in traditional data storage technologies.
** False (11.1.2)

While the cloud consumer is responsible for implementing the security controls, the cloud provider implements the security of the workload.
** True

Immutable workloads make it faster to roll out updated versions because applications must be designed to handle individual nodes going down.
** True

Installing security software designed for physical servers onto a virtualized server can result in severe degradation in performance.
** True

To increase network isolation, you should use SDN capabilities for multiple networks and cloud accounts or segments.
** True

Identified issues, risks, and recommended remediations are included when determining compliance.
** True

When the application components communicate directly with the cloud service, the management plane and metastructure might fall within the application security scope.
** True

Absent other evidence, such as tampering or hacking, documents should not be considered more or less admissible or credible because they were created or stored in the cloud.
** True

While a virtual machine is a full abstraction of an operating system, a container is a constrained place to run segregated processes while still using the kernel and other OS capabilities.
** True

Generally speaking, in the United States, a party is obligated to take reasonable steps to prevent the destruction or modification of data in its possession that it reasonably should know, is relevant to an anticipated litigation or government investigation.
** True

All cloud services utilize virtualization technologies.
** True

Big data includes high volume, high variety, and high velocity.
** True

APIs and web services require extensive hardening and must assume attacks from authenticated and unauthenticated adversaries.
** True

Cloud applications can use virtual networks and other structures, for hyper-segregated environments.
** True

Your cloud and on-premises infrastructures should always use the same network address ranges.
** False

REST APIs are the standard for web-based services because they run over HTTPS and work well across diverse environments.
** True

Use elastic servers when possible and move workloads to new instances.
** False

Network logs from cloud providers are typically flow records, not full packet captures.
** True

Dynamic Application Security Testing (DAST) might be limited or require pre-testing permission from the provider.
*** True

Your SLA with your cloud provider ensures continuity for all services.
** False

A security failure at the root network of a cloud provider will not compromise the security of all customers because of multitenancy configuration.
*** False

The containment phase of the incident response lifecycle requires taking systems offline.
*** True

When designing an encryption system, you should start with a threat model.
*** True

Vulnerability assessments cannot be easily integrated into CI/CD pipelines because of provider restrictions.
*** False

If the management plane has been breached, you should confirm the templates/configurations for your infrastructure or applications have not also been compromised.
*** True

Containers are highly portable code execution environments.
*** True

When configured properly, logs can track every code, infrastructure, and configuration change and connect it back to the submitter and approver, including the test results.
*** True

Without virtualization, there is no cloud.
*** True

All assets require the same continuity in the cloud.
*** False

Any given processor and memory will nearly always be running multiple workloads, often from different tenants.
** True

Even with immutable infrastructures, the production environment, should be actively monitored for changes and deviations from approved baselines.
** True

31 - Cloud Control Matrix (CCM) is a completely independent cloud assessment toolkit that does not map any existing standards
** False

### Unaswered

23 - in general, the majority of laws and regulations regarding data in network or cloud environment are designed to be what?
* Designed to ensure data privacy, security, and complianceand to protect the confidentiality, integrity, and availability of data, as well as to establish guidelines for data handling, storage, transfer, and disclosure. They often address issues such as data protection, data breach notification, consent requirements, cross-border data transfers, industry-specific regulations, and compliance 

