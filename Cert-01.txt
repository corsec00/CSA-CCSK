01 - A cloud deployment of two or more unique clouds is known as:
*** D. A Hybrid Cloud

02 - ENISA: Which is not one of the five key legal issues common across all scenarios:
*** C. Globalization

03 - ENISA: An example high risk role for malicious insiders within a Cloud Provider includes
*** D. Auditors

04 - What are the primary security responsibilities of the cloud provider in the management infrastructure?
*** A. Building and properly configuring a secure network infrastructure

05 - If there are gaps in network logging data, what can you do?
*** C. You can instrument the technology stack with your own logging.

06 - CCM: In the CCM tool, a ____________ is a measure that modifies risk and includes any process, policy, device, practice or any other actions which modify risk.
*** C. Control Specification

07 - Who is responsible for the security of the physical infrastructure and virtualization platform?
*** E. The cloud provider

08 - What factors should you understand about the data specifically due to legal, regulatory, and jurisdictional factors?
*** A. The physical location of the data and how it is accessed

09 - Which cloud-based service model enables companies to provide client-based access for partners to databases or applications?
*** E. Software-as-a-service (SaaS)

10 - what are the main considerations for key management
*** D. Performance, accessibility, latency, and security

11 - six phases of data security lifecycle
*** Creation , Storing , activity ,made accessible, long-term storage , destroyed 

12 - which of the following is among the vulnerabilities contributing to a high risk ranking of network management
*** A. system or os vulnerabilities

13 - computer virtualization abstracts the running of code, not including the operation system, from the underlying hardware
*** False (include OS)

16 - APIs and web services require extensive hardening and must assume attacks from authenticated and unauthenticated adversaries
*** True

18 - when deploying security as a service in a highly regulated industry or enviorenment, what should both parties agree on in advance and include in the sla?
*** A. The metrics defining the service level required to achieve regulatory objectives.

19 - In volume storage, what methods is often used to support resilience and security?
*** E. data dispersion

20 - What is it called when a customer's information and/or processes are compromised by the actions of another customer in a multi-tenancy environment?
*** D. isolation failure

21 - For cloud consumers to be able to properly configure and manage their network security, what must cloud providers do?
D. provide api access (?)
*** E. explose securiyt controls

22 - What is resource pooling?
*** A. The provider's computing resources are pooled to serve multiple consumer

24 - Your SLA with your cloud provider ensures continuity for all services.
*** False

25 - Which governance domain focuses on proper and adequate incident detection, response, notification, and remediation?
*** C. incident response, notification and remediation

26 - Cloud applications can use virtual networks and other structures, for hyper-segregated environments
*** True

27 - What type of information is contained in the Cloud Security Alliance's Cloud Control Matrix?
*** E. a number of requirements to be implemented based upon numerous standards and regulatory requirements

28 - which SDP component terminates network traffic and enforces communication policies?
*** B. Gateway

30 - which type of application security testing tests running applications and includes tests such as web vulnerability testing and fuzzing?
*** E. Dynamic Application Security Testing (DAST)

32 - which proeminent recommended standard to enable federation of identity in cloud enviorenment include:
*** B. SAML

33 - How should an SDLC be modified to address application security in a Cloud Computing environment?
** A. integrate development enviorenments
*** B. Updated threat and trust models

34 - What is a potential concern of using security-as-a-service(Secaas)?
***D. Lack of visibility

35 - which security advantage considers that anything that goes into production is created by the ci/cd pipeline on approved code and configuration templates?
*** D. Standarization

36 - Isolation failure refers to:
*** A. Failure of mechanisms separating storage, memory, routing between diferent tenants

38 - What is a challenge of application security in a cloud enviorenment?
*** C. Limited detailed visibility

42 - Sending data to a providers storage over an API is likely as much more reliable and secure than setting up your own SFTP server on a VM in the same provider
True (pg 122)

43 - which component is a key part of software container systems? (the execution enviorenment, An orchestration and scheduling controller, repository for the container images or code to execute)
*** C. the execution enviorenment

45 - without virtualization, there's no cloud
*** True

46 - what makes the metastructure layer of cloud computing so different from traditional computing?
*** D. It includes the management plane components which are network enabled and remotly accessible

47 - the scope applicability column in the CCM indicates the applicability of the cloud security control to which of the following elements?
*** B. mappings to well know standards and frameworkss

48 - which computing model contains the protocols and mechanisms providing the interface between the infrastructure and other layers?
*** C. metastructure layer

49 - a defining set of rules composed of claims and attributes os the entities in a transaction, which is used to determine their level of access to cloud based resource is called what?
*** C. Entilement Matrix

50 - what is true about Software defined network firewalls?
*** D. They are not limited based on physical topology

51 - Which cloud storage technology would include a content delivery network (CDN), files stored in SaaS, and caching?
***E. Application

52 - Virtual appliances can become bottlenecks because they cannot fail open and must intercept all traffic.
*** True

53 - To increase network isolation; you should use SDN capabilities for multiple networks and cloud accounts or segments
*** True

54 - which concept provides the abstraction needed for resource pools?
*** C. Virtualization

55 - which common component of big data is focused on the mechanism used to ingest large volumes of data, oftem of a streaming nature
*** D. Distributed data collection

56 - Use elastic servers when possible and move workloads to new instances.
*** True

-------------------------------
14 - CCSK: what is more secure and cost effective approach to data security and encryption
A. deny all and locking everythging down until requirements are meet
B. apply a data driven approach
*** C. apply a risk based approach
D. apply a blanket security policy to anything cloud
E. using the same policies applied to the traditional network

15 - what is the most important resason for know where the cloud service provider will host the data?
A. allow compliance with local law, regarding data privacy and regulations
B. implement required measures to ensure compliance with local laws an restrict cross boarder flow of data
C. enable data controler to register with local data protection officers
D. enable data locations transparency for the consumers
E. facilitate comprehensive disaster planing

17 - ccmd: which of the following statement about csa ccm and security guidance is false
A. csa security guidance tells you WHAT to do, the CCM tell you How to do it
B. CSA CCM provides a set of control objectives against which an organization should access cloud security
C. csa ccm tells you what to do, guidance tells you how to do it
D. csa security guidance provides a set of best practices and recommendations

23 - in general, the majority of laws and regulations regarding data in network or cloud enviorenment are designed to be what?

29 - when you considereing business continuity and disaster recovery with a cloud provider, which layer of the logical stack includes code and message queues?
A. Datastructure
B. Infostructure
C. Infrastructure
D. Metastructure
E. Applistructure

31 - Cloud Control Matrix (CCM) is a completely independent cloud assessment toolkit that does not map any existing standards
True
False

37 - What are the audit related implication of the outsourced cloud services?


39 - When attempting to contain, erradicate, and recover from a cloud based incident, what is the first step you should do?
A. Put the device in stand by mode
B. Terminate all super user/administrative access
C. Make sure the cloud management plane is free of an attack
D. Kill all network access
E. Isolate the infected devices

40 - the software defined perimeter (SDP) include wich components?
Controller, Initiating Hosts, and Accepting Hosts

41 - in a cloud envioprenment, how can you best determine data/information security risks and potential controls?
A. Run a search on user data files
B. encrypt everything
C. identify the major operatin system
D. Understand the related regulatory requirements
E. understand the cloud storage architecture in use

44 - an underlying vulnerability related to Loss of Governance is:
A. Inadequate capacity planning
B. Hypervisor vulnerabilities
** C. Unclear asset owership
D. Lack of supplier redundancy
E. Lack of reputational isolation

