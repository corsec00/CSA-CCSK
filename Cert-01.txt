01 - A cloud deployment of two or more unique clouds is known as:
*** D. A Hybrid Cloud

02 - ENISA: Which is not one of the five key legal issues common across all scenarios:
*** C. Globalization

03 - ENISA: An example high risk role for malicious insiders within a Cloud Provider includes
*** D. Auditors

04 - What are the primary security responsibilities of the cloud provider in the management infrastructure?
*** A. Building and properly configuring a secure network infrastructure

05 - If there are gaps in network logging data, what can you do?
*** C. You can instrument the technology stack with your own logging.

06 - CCM: In the CCM tool, a ____________ is a measure that modifies risk and includes any process, policy, device, practice or any other actions which modify risk.
*** C. Control Specification

07 - Who is responsible for the security of the physical infrastructure and virtualization platform?
*** E. The cloud provider

08 - What factors should you understand about the data specifically due to legal, regulatory, and jurisdictional factors?
*** A. The physical location of the data and how it is accessed

09 - Which cloud-based service model enables companies to provide client-based access for partners to databases or applications?
*** E. Software-as-a-service (SaaS)

10 - what are the main considerations for key management
*** D. Performance, accessibility, latency, and security (11.1.4.3 Key Management Including Customer-Managed Keys)

11 - six phases of data security lifecycle
*** Creation , Storing , activity ,made accessible, long-term storage , destroyed 
*** Create, Store, Use, Share, Archive, Destroy

12 - ENISA: Which of the following is among the vulnerabilities contributing to a high risk ranking for Network Management?
*** A. System or O/S vulnerabilities

13 - computer virtualization abstracts the running of code, not including the operation system, from the underlying hardware
*** False (include OS)

15 - what is the most important resason for know where the cloud service provider will host the data?
*** A. To allow compliance with local laws regarding data privacy and safeguarding

16 - APIs and web services require extensive hardening and must assume attacks from authenticated and unauthenticated adversaries
*** True

18 - when deploying security as a service in a highly regulated industry or enviorenment, what should both parties agree on in advance and include in the sla?
*** A. The metrics defining the service level required to achieve regulatory objectives.

19 - In volume storage, what methods is often used to support resilience and security?
*** E. data dispersion

20 - What is it called when a customer's information and/or processes are compromised by the actions of another customer in a multi-tenancy environment?
*** isolation failure
** Information leakage

21 - For cloud consumers to be able to properly configure and manage their network security, what must cloud providers do?
D. provide api access (?)
*** E. explose securiyt controls

22 - What is resource pooling?
*** A. The provider's computing resources are pooled to serve multiple consumer

24 - Your SLA with your cloud provider ensures continuity for all services.
*** False

25 - Which governance domain focuses on proper and adequate incident detection, response, notification, and remediation?
*** C. incident response, notification and remediation

26 - Cloud applications can use virtual networks and other structures, for hyper-segregated environments
*** True

27 - What type of information is contained in the Cloud Security Alliance's Cloud Control Matrix?
*** E. a number of requirements to be implemented based upon numerous standards and regulatory requirements

28 - which SDP component terminates network traffic and enforces communication policies?
*** B. Gateway

29 - When considering business continuity and disaster recovery with a cloud provider, which layer of the logical stack includes code and message queues?
*** E. Applistructure (SecGuiV4, P.74)

30 - which type of application security testing tests running applications and includes tests such as web vulnerability testing and fuzzing?
*** E. Dynamic Application Security Testing (DAST)

32 - which proeminent recommended standard to enable federation of identity in cloud enviorenment include:
*** B. SAML

33 - How should an SDLC be modified to address application security in a Cloud Computing environment?
** A. integrate development enviorenments
*** B. Updated threat and trust models

34 - What is a potential concern of using security-as-a-service(Secaas)?
***D. Lack of visibility

35 - which security advantage considers that anything that goes into production is created by the ci/cd pipeline on approved code and configuration templates?
*** D. Standarization

36 - Isolation failure refers to:
*** A. Failure of mechanisms separating storage, memory, routing between diferent tenants

38 - What is a challenge of application security in a cloud enviorenment?
*** C. Limited detailed visibility

40 - The Software Defined Perimeter (SDP) includes which components?
** Controller, Initiating Hosts, and Accepting Hosts
*** Client, Controller (for Auth and Autho), Gateway

41 - In a cloud environment, how can you best determine data/information security risks and potential controls?
** E. understand the cloud storage architecture in use

42 - Sending data to a providers storage over an API is likely as much more reliable and secure than setting up your own SFTP server on a VM in the same provider
True (pg 122)

43 - which component is a key part of software container systems? (the execution enviorenment, An orchestration and scheduling controller, repository for the container images or code to execute)
*** C. the execution enviorenment

45 - without virtualization, there's no cloud
*** True

46 - what makes the metastructure layer of cloud computing so different from traditional computing?
*** D. It includes the management plane components which are network enabled and remotly accessible

47 - the scope applicability column in the CCM indicates the applicability of the cloud security control to which of the following elements?
*** B. mappings to well know standards and frameworkss

48 - which computing model contains the protocols and mechanisms providing the interface between the infrastructure and other layers?
*** C. metastructure layer

49 - a defining set of rules composed of claims and attributes os the entities in a transaction, which is used to determine their level of access to cloud based resource is called what?
*** C. Entilement Matrix

50 - What is true of Software Defined Network firewalls?
*** D. They are not limited based on physical topology

51 - Which cloud storage technology would include a content delivery network (CDN), files stored in SaaS, and caching?
***E. Application

52 - Virtual appliances can become bottlenecks because they cannot fail open and must intercept all traffic
*** True

53 - To increase network isolation; you should use SDN capabilities for multiple networks and cloud accounts or segments
*** True

54 - which concept provides the abstraction needed for resource pools?
*** C. Virtualization

55 - which common component of big data is focused on the mechanism used to ingest large volumes of data, oftem of a streaming nature
*** D. Distributed data collection

56 - Use elastic servers when possible and move workloads to new instances.
*** True

-------------------------------
14 - CCSK: what is more secure and cost effective approach to data security and encryption
A. deny all and locking everythging down until requirements are meet
B. apply a data driven approach
*** C. apply a risk based approach
D. apply a blanket security policy to anything cloud
E. using the same policies applied to the traditional network



17 - ccmd: which of the following statement about csa ccm and security guidance is false
A. csa security guidance tells you WHAT to do, the CCM tell you How to do it
B. CSA CCM provides a set of control objectives against which an organization should access cloud security
C. csa ccm tells you what to do, guidance tells you how to do it
D. csa security guidance provides a set of best practices and recommendations

23 - in general, the majority of laws and regulations regarding data in network or cloud enviorenment are designed to be what?



31 - Cloud Control Matrix (CCM) is a completely independent cloud assessment toolkit that does not map any existing standards
True
False

37 - What are the audit related implication of the outsourced cloud services?

39 - When attempting to contain, erradicate, and recover from a cloud based incident, what is the first step you should do?
A. Put the device in stand by mode
B. Terminate all super user/administrative access
C. Make sure the cloud management plane is free of an attack
D. Kill all network access
E. Isolate the infected devices





44 - an underlying vulnerability related to Loss of Governance is:
A. Inadequate capacity planning
B. Hypervisor vulnerabilities
** C. Unclear asset owership
D. Lack of supplier redundancy
E. Lack of reputational isolation

==================================================== NEW PACK ====================================================
Who is responsible for the proper rights management and configuration of exposed controls in the management plane?
** The cloud consumer

The hub and spoke architecture uses internal identity providers or sources connected directly to cloud providers.
*** False (Guide, 12.1.2, pg 136: Free-form: internal identity providers/sources (often directory servers) connect directly to cloud providers. Hub and spoke: internal identity providers/sources communicate with a central broker or repository that then serves as the identity provider for federation to cloud providers.)

Cloud provider contract enforceability should be carefully considered in light of
** Foreign and out of state jurisdictions

Which security concept includes the policy, process, and internal controls comprising how an organization is run – including the structures and policies of the leadership and other mechanisms for management?
** Governance

In which layer is the management plane?
** Metastructure layer

Why, in the event that an enterprise seeks a new provider for Security as a Service, must they concern themselves with the problems of translating and transporting existing data and log files in a forensically sound manner?
** Providers often have proprietary standards for logging and reporting

ENISA: To mitigate credential compromise or theft, cloud provider can implement:
** Anomaly detection capabilities

Which phase of the incident response lifecycle includes creating and validating alerts?
** Detection & Analysis

Which technique uses the management plane to detect various activities, such as file uploads or configuration changes?
** Event-driven security

Immutable workloads make it faster to roll out updated versions because applications must be designed to handle individual nodes going down.
** True

ENISA: As it relates to public cloud computing, in the European Data Protection law, the customer is considered to be the
** Data controller

If a provider’s infrastructure is not in scope, who is responsible for building compliant applications and services?
** The customer is responsible for compliant applications and services

In the cloud provider and consumer relationship, which entity manages the virtual or abstracted infrastructure?
A. Only the cloud provider
B. It is determined in the agreement between the entities
C. Only the cloud consumer
D. Both the cloud provider and consumer
E. It is outsourced as per the entity agreement
Refer – section 8.1.2.2 Management Infrastructure The cloud user is, again, responsible for proper rights management and configuration of exposed controls in the management plane.

Which of the following is NOT a method of object storage encryption?
Enterprise digital rights management

CCM: In the Identity & Access Management (IAM) domain, what does the number ‘04’ in IAM-04 signify?
*** It is the 4th control in the IAM domain

In which deployment model do cloud customers have a reduced ability to govern operations because the cloud provider is responsible for the management and governance of the infrastructure?
*** Public Cloud

What is the main data source for detection and analysis of an incident?
** Logs

What are the components of an encryption system?
** Data, encryption engine, and key management

ENISA: In Infrastructure as a Service (IaaS), who is responsible for guest systems monitoring?
** Customer

What makes single cloud assets less resilient compared with a traditional infrastructure?
** Greater fragility of virtualized resources

Which components typically comprise Infrastructure-as-a-Service (IaaS) providers?
*** Hardware, APIs, and Core Connectivity & Delivery
Thus IaaS consists of a facility, hardware, an abstraction layer, an orchestration (core connectivity and delivery) layer to tie together the abstracted resources, and APIs to remotely manage the resources and deliver them to consumers.

Which action is part of the containment phase of the incident response lifecycle?
** Making considerations for data loss versus service availability

What is true of how the management plane is to be secured in the cloud?
** The cloud provider is responsible for securing the management plane and exposing the required security features, while the cloud consumer is responsible for configuring access to the management plane

Which of the following statements best describes the potential advantages of security as a service?
** The advantages may include flexible offering of services, greater security domain knowledge and efficiency of SecaaS providers

Which of the following statements best defines the "authentication" component of identity, entitlement, and access management (IdEA).
* Establishing/asserting the identity to the application

What can be implemented to help with account granularity and limit blast radius with IaaS an PaaS?
*** Establishing multiple accounts

Which statement best describes the options for PaaS encryption?
PaaS is very diverse and may include client/application, database, and proxy encryption as well as other options

ENISA: Because it is practically impossible to process data in encrypted form, customers should have the following expectation of cloud providers:
*** Provider should always manage customer encryption keys with hardware security module (HSM) storage

Which tool is the primary tool between the cloud provider and consumer that extends governance into business partners and providers?
Contracts (Guide, pg 29, 2.1.1.1)

Which of the following cloud deployment models represents a composition of two or more clouds that remain unique identities but are bound together by standardized or proprietary technology that enables data and application portability?
** Hybrid Cloud (1.1.2.3). The cloud infrastructure is a composition of two or more clouds (private, community, or public) that remain unique entities but are bound together by standardized or

CCM: What security requirements does the Identity and Access Management domain in the CCM address?
** The requirement to ensure appropriate access to resources and to enable the right individuals to access the right resources at the right times for the right reasons.

CCM: A hypothetical company called "lnfrastructure4Sure" provides Infrastructure as a Service (IaaS) to its clients. A customer wants to review Infrastructure4Sure's hypervisor security implementation measures. Which of the following measures should Infrastructure4Sure implement?
** Choose a hypervisor with a smaller footprint for a reduced attack surface.

Installing security software designed for physical servers onto a virtualized server can result in severe degradation in performance.
True

To increase network isolation, you should use SDN capabilities for multiple networks and cloud accounts or segments.
True


Which statement best describes a data (information) dispersion fragmentation scheme?
*** A file is split into fragments; all of the fragments are sent to multiple physical storage repositories.

Which common component of big data is focused on the mechanisms used to ingest large volumes of data, often of a streaming nature?
Distributed data collection (SegGuiV4 p.147 - Distributed data collection: Mechanisms to ingest large volumes of data, often of a streaming nature. This could be as “lightweight” as web-click streaming analytics and as complex as highly distributed scientific imaging or sensor data. Not all big data relies on distributed or streaming data collection, but it is a core big data technology.)

Identified issues, risks, and recommended remediations are included when determining compliance.
True

When configuring SDN firewalls, after adding all assets, what is typically the first configuration you must address?
** Opening connections

CCM: A hypothetical company called "Security4Sure" provides a cloud based service to share confidential documents. The confidential documents are stored in their servers and are encrypted. How will Security4Sure ensure the protection of client data within their data center?
** Encrypt the data at rest and put in place appropriate measures for management of encryption keys

At a minimum, how often should incident response testing occur?
** Annually and whenever a significant change occurs

In the case of Infrastructure as a Service (IaaS) or Platform as a Service (PaaS) the responsibility to effectively manage the security of the application running in the cloud primarily belongs to who?
** The cloud consumer's administrators

When the application components communicate directly with the cloud service, the management plane and metastructure might fall within the application security scope.
True

What are the encryption options available for SaaS consumers?
Provider-managed and (sometimes) proxy encryption

Absent other evidence, such as tampering or hacking, documents should not be considered more or less admissible or credible because they were created or stored in the cloud.
True

You have a business relationship with a cloud provider for all sales management functionality. Through the APIs and SDKs, you have customized the interface and some functionality, but the back end service is done through the cloud provider. In this relationship, which service is completed by the cloud provider?
** Platform-as-a-service (PaaS)

What is a benefit of application security in a cloud environment?
Isolated environments

CCM: A hypothetical start-up company called "IT4Sure" provides a cloud based IT management solution. They are growing rapidly and have some security measures in place but the employees are still using their personal mobile devices for storing and communicating company confidential information. So they decide to provide the employees with company mobile devices and implement a Mobile Device Management policy. Two months later, a customer wants to review IT4Sure's mobile device security practices. Which of the following basic protection measures should the client look for in the company's Mobile Device Management policy?
** All of the above

A key element of the "Destroy" phase of the Data Security Lifecycle is:
** Crypto-Shredding

While a virtual machine is a full abstraction of an operating system, a container is a constrained place to run segregated processes while still using the kernel and other OS capabilities.
** True

ENISA: A key area of controls for cloud provider network architecture is
** Distributed Denial of Service mitigation

To what extent does the CSA Guidance document suffice for legal advice in setting up relationships with cloud service providers?
** The CSA Guidance document provides an overview of selected issues and it is not a substitute for obtaining legal advice. (Guide pg 37)

What are the three valid options for protecting data as it moves to and within the cloud?
***Client/Application Encryption, Link/Network Encryption, Proxy-Based Encryption (11.1.3.1.)

How can you reduce the blast radius if an attacker compromises one system?
** Configure applications on distinct virtual networks only connecting where needed

Cloud storage will most often utilize the same types of data storage used in traditional data storage technologies.
** False (11.1.2)

What are major factors to building and managing a secure management plane?
** Perimeter security; customer authentication; internal authentication and credential passing; authorization and entitlements; and logging, monitoring, and alerting

Which of the following items is one of the major regulatory compliance problems associated with cloud environments?
** The distributed nature of cloud storage may result in regulated information being sent across geographical boundaries

While the cloud consumer is responsible for implementing the security controls, the cloud provider implements the security of the workload.
** True

Which SDP component is used for authentication and authorization?
** Controller (SecGui Pg.82 )

What are the three main aspects for data security controls?
*** Controlling, protecting, and enforcing (11.1.1 Data Security Controls)

Which facet is focused on protecting the management plane components, such as web and API servers, from attacks?
** Perimeter security

Which type of application security testing should incorporate checks on API calls to the cloud service?
*** Static Application Security Testing (SAST)

When associating the functions to an actor, what is used to restrict a list of possible actions dowr to allowed actions?
** Controls

Why do blind spots occur in a virtualized environment, where network-based security controls may not be able to monitor certain types of traffic?
** Virtual machines may communicate with each other over a virtual network all on the same host rather than a physical network between servers
** None of the above

The level of attention and scrutiny paid to enterprise risk assessments should be directly related to what?
** The value of the information at risk

What is a core tenant of risk management?
*** You can manage, transfer, accept, or avoid risks.

Which deployment model is commonly used to describe a non-cloud data center bridged directly to a cloud provider?
*** Hybrid Cloud

For cloud consumers to be able to properly configure and manage their network security, what must cloud providers do?
*** Expose security controls

What is a method used to decouple the network control plane from the data plane?
*** Software Defined Networking (SDN) (P.79 D: Software Defined Networking )

Which concept is defined as the unique expression of an entity within a given namespace?
** Identity

How can you monitor and filter data in a virtual network when traffic might not cross the physical network? (Both)
•	Route traffic to a virtual appliance on the same virtual network
•	Route traffic to a virtual network monitoring or filtering tool on the same hardware

What best describes the tradeoff of Infrastructure as a Service as compared to other cloud service models?
** Greater initial costs and greater security features

Which part of the incident response process is greatly complicated by the resource pooling and rapid elasticity of cloud infrastructure?
** Forensics

Generally speaking, in the United States, a party is obligated to take reasonable steps to prevent the destruction or modification of data in its possession that it reasonably should know, is relevant to an anticipated litigation or government investigation.
** True

What are the NIST defined essential characteristics of cloud computing?
** Broad network access, rapid elasticity, measured service, on-demand self-service, and resource pooling

What is true of cloud built-in firewalls?
*** They typically offer fewer features that newer physical firewalls (SecGuiV4, P.96)

What factor(s), if any, allows for more efficient and effective containment and recovery in a cloud environment than in a non-cloud environment.
** Virtualization technologies, and the elasticity inherent in cloud computing platforms

CCM: What is the role of the Scope Applicability column in the CCM?
** It maps the existing industry standards to the controls in the domains

Which regulation affects data controllers with business in Japan?
** Act on the Protection of Personal Information

The key concern of data backup and recovery schemes is:
** Data should not be commingled with other customers
